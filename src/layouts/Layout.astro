---
import '../styles/global.css';

interface Props {
  title?: string;
  description?: string;
}

const { title = 'Boris - Bookmarks and Other Stuff Read in Style', description = '' } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>{title}</title>
    {description && <meta name="description" content={description} />}
    <meta name="keywords" content="" />
    <meta name="author" content="" />
    
    <!-- Favicons -->
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="icon" href="/favicon.ico" />
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    
    <!-- Theme Detection Script (runs before page render to prevent flash) -->
    <script is:inline>
      (function() {
        const saved = localStorage.getItem('theme');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const isDark = saved ? saved === 'dark' : prefersDark;
        document.documentElement.classList.toggle('dark', isDark);
      })();
    </script>
  </head>
  <body class="gradient leading-relaxed tracking-wide flex flex-col">
    <slot />
    
    <script>
      /* Toggle dropdown list */
      /* https://gist.github.com/slavapas/593e8e50cf4cc16ac972afcbad4f70c8 */

      const navMenuDiv = document.getElementById("nav-content");
      const navMenu = document.getElementById("nav-toggle");

      document.onclick = check;
      function check(e: MouseEvent) {
        const target = e?.target as HTMLElement;

        // Nav Menu
        if (navMenuDiv && navMenu) {
          if (!checkParent(target, navMenuDiv)) {
            // click NOT on the menu
            if (checkParent(target, navMenu)) {
              // click on the link
              if (navMenuDiv.classList.contains("hidden")) {
                navMenuDiv.classList.remove("hidden");
              } else {
                navMenuDiv.classList.add("hidden");
              }
            } else {
              // click both outside link and outside menu, hide menu
              navMenuDiv.classList.add("hidden");
            }
          }
        }
      }
      
      function checkParent(t: HTMLElement | null, elm: HTMLElement): boolean {
        while (t?.parentNode) {
          if (t == elm) {
            return true;
          }
          t = t.parentNode as HTMLElement;
        }
        return false;
      }

      /* Theme application utility used by both OS changes and manual toggle */
      function applyTheme(isDark: boolean) {
        document.documentElement.classList.toggle('dark', isDark);
        window.dispatchEvent(new CustomEvent('themechange', { detail: { theme: isDark ? 'dark' : 'light' } }));
      }

      // React to OS-level appearance changes ONLY when no manual preference stored
      const media = window.matchMedia('(prefers-color-scheme: dark)');
      function handleOSChange(e: MediaQueryListEvent) {
        if (!localStorage.getItem('theme')) {
          applyTheme((e as MediaQueryListEvent).matches);
        }
      }
      if (typeof media.addEventListener === 'function') {
        media.addEventListener('change', handleOSChange);
      } else if (typeof media.addListener === 'function') {
        // Safari <14
        media.addListener(handleOSChange);
      }

      // Manual toggle: identical effect to OS change
      (window as any).toggleTheme = function() {
        const isDark = document.documentElement.classList.contains('dark');
        const next = !isDark;
        applyTheme(next);
        localStorage.setItem('theme', next ? 'dark' : 'light');
      };
    </script>
  </body>
</html>

